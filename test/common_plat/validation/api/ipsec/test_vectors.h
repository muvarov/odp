/* Copyright (c) 2017, Linaro Limited
 * All rights reserved.
 *
 * SPDX-License-Identifier:     BSD-3-Clause
 */

#ifndef _ODP_TEST_IPSEC_VECTORS_H_
#define _ODP_TEST_IPSEC_VECTORS_H_

#define KEY(name, ...)					\
	static uint8_t name ## _data[] = { __VA_ARGS__ };	\
	static const ODP_UNUSED odp_crypto_key_t name = {	\
		.data = name ## _data,			\
		.length = sizeof(name ## _data),	\
	}

KEY(key_a5_128, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5,
		0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5);
KEY(key_5a_128, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,
		0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a);
KEY(key_a5_256, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5,
		0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5,
		0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5,
		0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5);
KEY(key_5a_256, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,
		0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,
		0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,
		0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a);

KEY(key_rfc3602, 0x90, 0xd3, 0x82, 0xb4, 0x10, 0xee, 0xba, 0x7a,
		 0xd9, 0x38, 0xc4, 0x6c, 0xec, 0x1a, 0x82, 0xbf);
KEY(key_rfc3602_2, 0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
		   0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef);
KEY(key_mcgrew_gcm_2, 0xfe, 0xff, 0xe9, 0x92, 0x86, 0x65, 0x73, 0x1c,
		      0x6d, 0x6a, 0x8f, 0x94, 0x67, 0x30, 0x83, 0x08);
KEY(key_mcgrew_gcm_salt_2, 0xca, 0xfe, 0xba, 0xbe);
KEY(key_mcgrew_gcm_3, 0xab, 0xbc, 0xcd, 0xde, 0xf0, 0x01, 0x12, 0x23,
		      0x34, 0x45, 0x56, 0x67, 0x78, 0x89, 0x9a, 0xab,
		      0xab, 0xbc, 0xcd, 0xde, 0xf0, 0x01, 0x12, 0x23,
		      0x34, 0x45, 0x56, 0x67, 0x78, 0x89, 0x9a, 0xab);
KEY(key_mcgrew_gcm_salt_3, 0x11, 0x22, 0x33, 0x44);
KEY(key_mcgrew_gcm_4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
KEY(key_mcgrew_gcm_salt_4, 0x00, 0x00, 0x00, 0x00);
KEY(key_mcgrew_gcm_12, 0x7d, 0x77, 0x3d, 0x00, 0xc1, 0x44, 0xc5, 0x25,
		       0xac, 0x61, 0x9d, 0x18, 0xc8, 0x4a, 0x3f, 0x47);
KEY(key_mcgrew_gcm_salt_12, 0xd9, 0x66, 0x42, 0x67);

static const ODP_UNUSED ipsec_test_packet pkt_icmp_0 = {
	.len = 142,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x01, 0xac, 0x27, 0xc0, 0xa8, 0x6f, 0x02,
		0xc0, 0xa8, 0xde, 0x02,

		/* ICMP */
		0x08, 0x00, 0xfb, 0x37, 0x12, 0x34, 0x00, 0x00,
		0xba, 0xbe, 0x01, 0x23, 0x45, 0x67, 0xca, 0xfe,
		0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
		0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
		0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
		0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
		0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
		0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
		0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
		0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
		0x58, 0x59, 0x5a, 0x5b,
	},
};

static const ODP_UNUSED ipsec_test_packet pkt_icmp_0_ipip = {
	.len = 162,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x04, 0x19, 0x62, 0x0a, 0x00, 0x6f, 0x02,
		0x0a, 0x00, 0xde, 0x02,

		/* Inner IP */
		0x45, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x01, 0xac, 0x27, 0xc0, 0xa8, 0x6f, 0x02,
		0xc0, 0xa8, 0xde, 0x02,

		/* ICMP */
		0x08, 0x00, 0xfb, 0x37, 0x12, 0x34, 0x00, 0x00,
		0xba, 0xbe, 0x01, 0x23, 0x45, 0x67, 0xca, 0xfe,
		0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
		0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
		0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
		0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
		0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
		0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
		0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
		0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
		0x58, 0x59, 0x5a, 0x5b
	},
};

static const ODP_UNUSED ipsec_test_packet pkt_icmp_0_ah_sha256_1 = {
	.len = 170,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x33, 0xab, 0xd9, 0xc0, 0xa8, 0x6f, 0x02,
		0xc0, 0xa8, 0xde, 0x02,

		/* AH */
		0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b,
		0x00, 0x00, 0x00, 0x01,
		0x6c, 0x2e, 0xf7, 0x1f, 0x7c, 0x70, 0x39, 0xa3,
		0x4a, 0x77, 0x01, 0x47, 0x9e, 0x45, 0x73, 0x51,

		/* ICMP */
		0x08, 0x00, 0xfb, 0x37, 0x12, 0x34, 0x00, 0x00,
		0xba, 0xbe, 0x01, 0x23, 0x45, 0x67, 0xca, 0xfe,
		0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
		0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
		0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
		0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
		0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
		0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
		0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
		0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
		0x58, 0x59, 0x5a, 0x5b,
	},
};

static const ODP_UNUSED ipsec_test_packet pkt_icmp_0_ah_tun_sha256_1 = {
	.len = 190,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x33, 0x19, 0x17, 0x0a, 0x00, 0x6f, 0x02,
		0x0a, 0x00, 0xde, 0x02,

		/* AH */
		0x04, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b,
		0x00, 0x00, 0x00, 0x01,
		0xd5, 0x35, 0x9b, 0x21, 0xe6, 0x14, 0x9b, 0x42,
		0x1f, 0x00, 0xfa, 0x36, 0x73, 0x4c, 0x53, 0xcf,

		/* Inner IP */
		0x45, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x01, 0xac, 0x27, 0xc0, 0xa8, 0x6f, 0x02,
		0xc0, 0xa8, 0xde, 0x02,

		/* ICMP */
		0x08, 0x00, 0xfb, 0x37, 0x12, 0x34, 0x00, 0x00,
		0xba, 0xbe, 0x01, 0x23, 0x45, 0x67, 0xca, 0xfe,
		0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
		0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
		0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
		0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
		0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
		0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
		0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
		0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
		0x58, 0x59, 0x5a, 0x5b,
	},
};

static const ODP_UNUSED ipsec_test_packet pkt_icmp_0_ah_sha256_1_bad1 = {
	.len = 168,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x33, 0xab, 0xd9, 0xc0, 0xa8, 0x6f, 0x02,
		0xc0, 0xa8, 0xde, 0x02,

		/* AH */
		0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b,
		0x00, 0x00, 0x00, 0x01,
		0x6c, 0x2e, 0xf7, 0x1f, 0x7c, 0x70, 0x39, 0xa3,
		0x4a, 0x77, 0x01, 0x47, 0x9e, 0x45, 0x73, 0x51,

		/* ICMP */
		0x08, 0x00, 0xfb, 0x37, 0x12, 0x34, 0x00, 0x00,
		0xba, 0xbe, 0x01, 0x23, 0x45, 0x67, 0xca, 0xfe,
		0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
		0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
		0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
		0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
		0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
		0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
		0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
		0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
		0x58, 0x59,
	},
};

static const ODP_UNUSED ipsec_test_packet pkt_icmp_0_ah_sha256_1_bad2 = {
	.len = 170,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x33, 0xab, 0xd9, 0xc0, 0xa8, 0x6f, 0x02,
		0xc0, 0xa8, 0xde, 0x02,

		/* AH */
		0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b,
		0x00, 0x00, 0x00, 0x01,
		0x6c, 0x2e, 0xf7, 0x1f, 0x7c, 0x70, 0x39, 0xa3,
		0x4a, 0x77, 0x01, 0x47, 0x9e, 0x45, 0x73, 0x51,

		/* ICMP */
		0x08, 0x00, 0xfb, 0x37, 0x12, 0x34, 0x00, 0x00,
		0xba, 0xbe, 0x01, 0x23, 0x45, 0x67, 0xca, 0xfe,
		0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
		0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
		0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
		0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
		0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
		0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
		0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
		0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
		0x58, 0x59, 0x5a, 0x5d,
	},
};

static const ODP_UNUSED ipsec_test_packet pkt_icmp_0_esp_null_sha256_1 = {
	.len = 170,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x32, 0xab, 0xda, 0xc0, 0xa8, 0x6f, 0x02,
		0xc0, 0xa8, 0xde, 0x02,

		/* ESP */
		0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x01,

		/* ICMP */
		0x08, 0x00, 0xfb, 0x37, 0x12, 0x34, 0x00, 0x00,
		0xba, 0xbe, 0x01, 0x23, 0x45, 0x67, 0xca, 0xfe,
		0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
		0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
		0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
		0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
		0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
		0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
		0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
		0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
		0x58, 0x59, 0x5a, 0x5b,

		/* ESP TRL */
		0x01, 0x02, 0x02, 0x01,

		/* ICV */
		0xe9, 0x81, 0xcd, 0x65, 0x9b, 0x25, 0x0b, 0x33,
		0xe2, 0xf3, 0x83, 0xf1, 0x6d, 0x14, 0xb4, 0x1f,
	},
};

static const ODP_UNUSED ipsec_test_packet pkt_icmp_0_esp_tun_null_sha256_1 = {
	.len = 190,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x32, 0x19, 0x18, 0x0a, 0x00, 0x6f, 0x02,
		0x0a, 0x00, 0xde, 0x02,

		/* ESP */
		0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x01,

		/* Inner IP */
		0x45, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x01, 0xac, 0x27, 0xc0, 0xa8, 0x6f, 0x02,
		0xc0, 0xa8, 0xde, 0x02,

		/* ICMP */
		0x08, 0x00, 0xfb, 0x37, 0x12, 0x34, 0x00, 0x00,
		0xba, 0xbe, 0x01, 0x23, 0x45, 0x67, 0xca, 0xfe,
		0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
		0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
		0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
		0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
		0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
		0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
		0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
		0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
		0x58, 0x59, 0x5a, 0x5b,

		/* ESP TRL */
		0x01, 0x02, 0x02, 0x04,

		/* ICV */
		0x73, 0x8d, 0xf6, 0x9a, 0x26, 0x06, 0x4d, 0xa1,
		0x88, 0x37, 0x65, 0xab, 0x0d, 0xe9, 0x95, 0x3b,
	},
};

static const ODP_UNUSED ipsec_test_packet pkt_icmp_0_esp_null_sha256_1_bad1 = {
	.len = 170,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x32, 0xab, 0xda, 0xc0, 0xa8, 0x6f, 0x02,
		0xc0, 0xa8, 0xde, 0x02,

		/* ESP */
		0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x01,

		/* ICMP */
		0x08, 0x00, 0xfb, 0x37, 0x12, 0x34, 0x00, 0x00,
		0xba, 0xbe, 0x01, 0x23, 0x45, 0x67, 0xca, 0xfe,
		0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
		0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
		0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
		0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
		0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
		0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
		0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
		0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
		0x58, 0x59, 0x5a, 0x5b,

		/* ESP TRL */
		0x01, 0x02, 0x02, 0x01,

		/* ICV */
		0x18, 0x00, 0x14, 0x3a, 0x54, 0x72, 0x98, 0xe8,
		0xc7, 0x2d, 0xfa, 0xeb, 0x70, 0xe0, 0x24, 0xdf,
	},
};

static const ODP_UNUSED ipsec_test_packet pkt_icmp_0_esp_aes_cbc_null_1 = {
	.len = 170,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x32, 0xab, 0xca, 0xc0, 0xa8, 0x6f, 0x02,
		0xc0, 0xa8, 0xde, 0x02,

		/* ESP */
		0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x01,

		/* IV */
		0x96, 0xfa, 0x74, 0x56, 0x78, 0xe4, 0xbb, 0x0c,
		0x9e, 0x6e, 0x4a, 0xeb, 0x44, 0xd9, 0xf2, 0xe6,

		/* data */
		0x2f, 0xb3, 0xa6, 0xfe, 0x2c, 0x2e, 0xce, 0x65,
		0x3a, 0x57, 0xe3, 0x09, 0x5d, 0x66, 0x36, 0x32,
		0xb1, 0xc2, 0x59, 0x58, 0xb6, 0xe5, 0x9e, 0xa2,
		0x07, 0xf8, 0x26, 0x4a, 0x64, 0xf5, 0x16, 0x01,
		0x51, 0x8e, 0xe5, 0x4b, 0x07, 0x2c, 0x4b, 0x23,
		0xfa, 0x4e, 0x6e, 0xdb, 0x35, 0xc7, 0x1d, 0x30,
		0x42, 0xd9, 0x0f, 0xba, 0x8a, 0x69, 0x7e, 0x29,
		0xe7, 0xbd, 0x15, 0xe9, 0x35, 0x9e, 0x81, 0xe7,
		0x9e, 0xc9, 0x7d, 0x66, 0x99, 0x58, 0xec, 0x45,
		0x29, 0xd0, 0xa4, 0xfd, 0xf1, 0xe7, 0x5b, 0x3e,
		0x2a, 0x77, 0x1d, 0x8f, 0x2b, 0x73, 0xba, 0xf8,
		0x72, 0xd2, 0xa0, 0x0b, 0x90, 0xb9, 0x73, 0x9c,
		0xde, 0x3c, 0xc3, 0xb8, 0x91, 0x97, 0xc4, 0x28,
		0xfa, 0x6d, 0xa8, 0x41, 0xb6, 0x83, 0xc8, 0xaa,
	},
};

static const ODP_UNUSED ipsec_test_packet pkt_icmp_0_esp_aes_cbc_sha256_1 = {
	.len = 186,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x32, 0xab, 0xca, 0xc0, 0xa8, 0x6f, 0x02,
		0xc0, 0xa8, 0xde, 0x02,

		/* ESP */
		0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x01,

		/* IV */
		0x96, 0xfa, 0x74, 0x56, 0x78, 0xe4, 0xbb, 0x0c,
		0x9e, 0x6e, 0x4a, 0xeb, 0x44, 0xd9, 0xf2, 0xe6,

		/* data */
		0x2f, 0xb3, 0xa6, 0xfe, 0x2c, 0x2e, 0xce, 0x65,
		0x3a, 0x57, 0xe3, 0x09, 0x5d, 0x66, 0x36, 0x32,
		0xb1, 0xc2, 0x59, 0x58, 0xb6, 0xe5, 0x9e, 0xa2,
		0x07, 0xf8, 0x26, 0x4a, 0x64, 0xf5, 0x16, 0x01,
		0x51, 0x8e, 0xe5, 0x4b, 0x07, 0x2c, 0x4b, 0x23,
		0xfa, 0x4e, 0x6e, 0xdb, 0x35, 0xc7, 0x1d, 0x30,
		0x42, 0xd9, 0x0f, 0xba, 0x8a, 0x69, 0x7e, 0x29,
		0xe7, 0xbd, 0x15, 0xe9, 0x35, 0x9e, 0x81, 0xe7,
		0x9e, 0xc9, 0x7d, 0x66, 0x99, 0x58, 0xec, 0x45,
		0x29, 0xd0, 0xa4, 0xfd, 0xf1, 0xe7, 0x5b, 0x3e,
		0x2a, 0x77, 0x1d, 0x8f, 0x2b, 0x73, 0xba, 0xf8,
		0x72, 0xd2, 0xa0, 0x0b, 0x90, 0xb9, 0x73, 0x9c,
		0xde, 0x3c, 0xc3, 0xb8, 0x91, 0x97, 0xc4, 0x28,
		0xfa, 0x6d, 0xa8, 0x41, 0xb6, 0x83, 0xc8, 0xaa,

		/* IV */
		0x8a, 0x39, 0x10, 0x07, 0x02, 0x97, 0xbb, 0x1c,
		0x59, 0xb7, 0x70, 0x33, 0xa4, 0x26, 0xa2, 0xb8
	},
};

static const ODP_UNUSED ipsec_test_packet pkt_rfc3602_5 = {
	.len = 98,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x54, 0x08, 0xf2, 0x00, 0x00,
		0x40, 0x01, 0xf9, 0xfe, 0xc0, 0xa8, 0x7b, 0x03,
		0xc0, 0xa8, 0x7b, 0x64,

		/* ICMP */
		0x08, 0x00, 0x0e, 0xbd, 0xa7, 0x0a, 0x00, 0x00,
		0x8e, 0x9c, 0x08, 0x3d, 0xb9, 0x5b, 0x07, 0x00,
		0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
		0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
		0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
		0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,

	},
};

static const ODP_UNUSED ipsec_test_packet pkt_rfc3602_5_esp = {
	.len = 138,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x7c, 0x08, 0xf2, 0x00, 0x00,
		0x40, 0x32, 0xf9, 0xa5, 0xc0, 0xa8, 0x7b, 0x03,
		0xc0, 0xa8, 0x7b, 0x64,

		/* ESP */
		0x00, 0x00, 0x43, 0x21, 0x00, 0x00, 0x00, 0x01,

		/* IV */
		0xe9, 0x6e, 0x8c, 0x08, 0xab, 0x46, 0x57, 0x63,
		0xfd, 0x09, 0x8d, 0x45, 0xdd, 0x3f, 0xf8, 0x93,

		/* data */
		0xf6, 0x63, 0xc2, 0x5d, 0x32, 0x5c, 0x18, 0xc6,
		0xa9, 0x45, 0x3e, 0x19, 0x4e, 0x12, 0x08, 0x49,
		0xa4, 0x87, 0x0b, 0x66, 0xcc, 0x6b, 0x99, 0x65,
		0x33, 0x00, 0x13, 0xb4, 0x89, 0x8d, 0xc8, 0x56,
		0xa4, 0x69, 0x9e, 0x52, 0x3a, 0x55, 0xdb, 0x08,
		0x0b, 0x59, 0xec, 0x3a, 0x8e, 0x4b, 0x7e, 0x52,
		0x77, 0x5b, 0x07, 0xd1, 0xdb, 0x34, 0xed, 0x9c,
		0x53, 0x8a, 0xb5, 0x0c, 0x55, 0x1b, 0x87, 0x4a,
		0xa2, 0x69, 0xad, 0xd0, 0x47, 0xad, 0x2d, 0x59,
		0x13, 0xac, 0x19, 0xb7, 0xcf, 0xba, 0xd4, 0xa6,
	},
};

static const ipsec_test_packet pkt_rfc3602_6 = {
	.len = 62,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x30, 0x08, 0xfe, 0x00, 0x00,
		0x40, 0x01, 0xfa, 0x16, 0xc0, 0xa8, 0x7b, 0x03,
		0xc0, 0xa8, 0x7b, 0x64,

		/* ICMP */
		0x08, 0x00, 0xb5, 0xe8, 0xa8, 0x0a, 0x05, 0x00,
		0xa6, 0x9c, 0x08, 0x3d, 0x0b, 0x66, 0x0e, 0x00,
		0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77,
		0x77, 0x77, 0x77, 0x77,
	},
};

static const ipsec_test_packet pkt_rfc3602_6_esp = {
	.len = 90,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x4c, 0x08, 0xfe, 0x00, 0x00,
		0x40, 0x32, 0xf9, 0xc9, 0xc0, 0xa8, 0x7b, 0x03,
		0xc0, 0xa8, 0x7b, 0x64,

		/* ESP */
		0x00, 0x00, 0x43, 0x21, 0x00, 0x00, 0x00, 0x08,

		/* IV */
		0x69, 0xd0, 0x8d, 0xf7, 0xd2, 0x03, 0x32, 0x9d,
		0xb0, 0x93, 0xfc, 0x49, 0x24, 0xe5, 0xbd, 0x80,

		/* data */
		0xf5, 0x19, 0x95, 0x88, 0x1e, 0xc4, 0xe0, 0xc4,
		0x48, 0x89, 0x87, 0xce, 0x74, 0x2e, 0x81, 0x09,
		0x68, 0x9b, 0xb3, 0x79, 0xd2, 0xd7, 0x50, 0xc0,
		0xd9, 0x15, 0xdc, 0xa3, 0x46, 0xa8, 0x9f, 0x75,
	},
};

static const ipsec_test_packet pkt_rfc3602_7 = {
	.len = 98,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x54, 0x09, 0x04, 0x00, 0x00,
		0x40, 0x01, 0xf9, 0x88, 0xc0, 0xa8, 0x7b, 0x03,
		0xc0, 0xa8, 0x7b, 0xc8,

		/* ICMP */
		0x08, 0x00, 0x9f, 0x76, 0xa9, 0x0a, 0x01, 0x00,
		0xb4, 0x9c, 0x08, 0x3d, 0x02, 0xa2, 0x04, 0x00,
		0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
		0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
		0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
		0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
	},
};

static const ipsec_test_packet pkt_rfc3602_7_esp = {
	.len = 154,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x8c, 0x09, 0x05, 0x00, 0x00,
		0x40, 0x32, 0xf9, 0x1e, 0xc0, 0xa8, 0x7b, 0x03,
		0xc0, 0xa8, 0x7b, 0xc8,

		/* ESP */
		0x00, 0x00, 0x87, 0x65, 0x00, 0x00, 0x00, 0x02,

		/* IV */
		0xf4, 0xe7, 0x65, 0x24, 0x4f, 0x64, 0x07, 0xad,
		0xf1, 0x3d, 0xc1, 0x38, 0x0f, 0x67, 0x3f, 0x37,

		/* data */
		0x77, 0x3b, 0x52, 0x41, 0xa4, 0xc4, 0x49, 0x22,
		0x5e, 0x4f, 0x3c, 0xe5, 0xed, 0x61, 0x1b, 0x0c,
		0x23, 0x7c, 0xa9, 0x6c, 0xf7, 0x4a, 0x93, 0x01,
		0x3c, 0x1b, 0x0e, 0xa1, 0xa0, 0xcf, 0x70, 0xf8,
		0xe4, 0xec, 0xae, 0xc7, 0x8a, 0xc5, 0x3a, 0xad,
		0x7a, 0x0f, 0x02, 0x2b, 0x85, 0x92, 0x43, 0xc6,
		0x47, 0x75, 0x2e, 0x94, 0xa8, 0x59, 0x35, 0x2b,
		0x8a, 0x4d, 0x4d, 0x2d, 0xec, 0xd1, 0x36, 0xe5,
		0xc1, 0x77, 0xf1, 0x32, 0xad, 0x3f, 0xbf, 0xb2,
		0x20, 0x1a, 0xc9, 0x90, 0x4c, 0x74, 0xee, 0x0a,
		0x10, 0x9e, 0x0c, 0xa1, 0xe4, 0xdf, 0xe9, 0xd5,
		0xa1, 0x00, 0xb8, 0x42, 0xf1, 0xc2, 0x2f, 0x0d,
	},
};

static const ipsec_test_packet pkt_rfc3602_8 = {
	.len = 82,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x44, 0x09, 0x0c, 0x00, 0x00,
		0x40, 0x01, 0xf9, 0x90, 0xc0, 0xa8, 0x7b, 0x03,
		0xc0, 0xa8, 0x7b, 0xc8,

		/* ICMP */
		0x08, 0x00, 0xd6, 0x3c, 0xaa, 0x0a, 0x02, 0x00,
		0xc6, 0x9c, 0x08, 0x3d, 0xa3, 0xde, 0x03, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	},
};

static const ipsec_test_packet pkt_rfc3602_8_esp = {
	.len = 138,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x7c, 0x09, 0x0d, 0x00, 0x00,
		0x40, 0x32, 0xf9, 0x26, 0xc0, 0xa8, 0x7b, 0x03,
		0xc0, 0xa8, 0x7b, 0xc8,

		/* ESP */
		0x00, 0x00, 0x87, 0x65, 0x00, 0x00, 0x00, 0x05,

		/* IV */
		0x85, 0xd4, 0x72, 0x24, 0xb5, 0xf3, 0xdd, 0x5d,
		0x21, 0x01, 0xd4, 0xea, 0x8d, 0xff, 0xab, 0x22,

		/* data */
		0x15, 0xb9, 0x26, 0x83, 0x81, 0x95, 0x96, 0xa8,
		0x04, 0x72, 0x32, 0xcc, 0x00, 0xf7, 0x04, 0x8f,
		0xe4, 0x53, 0x18, 0xe1, 0x1f, 0x8a, 0x0f, 0x62,
		0xed, 0xe3, 0xc3, 0xfc, 0x61, 0x20, 0x3b, 0xb5,
		0x0f, 0x98, 0x0a, 0x08, 0xc9, 0x84, 0x3f, 0xd3,
		0xa1, 0xb0, 0x6d, 0x5c, 0x07, 0xff, 0x96, 0x39,
		0xb7, 0xeb, 0x7d, 0xfb, 0x35, 0x12, 0xe5, 0xde,
		0x43, 0x5e, 0x72, 0x07, 0xed, 0x97, 0x1e, 0xf3,
		0xd2, 0x72, 0x6d, 0x9b, 0x5e, 0xf6, 0xaf, 0xfc,
		0x6d, 0x17, 0xa0, 0xde, 0xcb, 0xb1, 0x38, 0x92,
	},
};

/*
 * Several tests from draft-mcgrew-gcm-test-01. It was never completed as an
 * RFC, but serves good purpopse anyway.
 *
 * Note: plaintext texts also contain ESP trailers, which we
 * do not include here into plaintext packets.
 */
static const ipsec_test_packet pkt_mcgrew_gcm_test_2 = {
	.len = 76,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x3e, 0x69, 0x8f, 0x00, 0x00,
		0x80, 0x11, 0x4d, 0xcc, 0xc0, 0xa8, 0x01, 0x02,
		0xc0, 0xa8, 0x01, 0x01,

		/* UDP */
		0x0a, 0x98, 0x00, 0x35, 0x00, 0x2a, 0x23, 0x43,
		0xb2, 0xd0, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x03, 0x73, 0x69, 0x70,
		0x09, 0x63, 0x79, 0x62, 0x65, 0x72, 0x63, 0x69,
		0x74, 0x79, 0x02, 0x64, 0x6b, 0x00, 0x00, 0x01,
		0x00, 0x01,
	},
};

static const ipsec_test_packet pkt_mcgrew_gcm_test_2_esp = {
	.len = 130,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP - not a part of RFC, added for simplicity */
		0x45, 0x00, 0x00, 0x74, 0x69, 0x8f, 0x00, 0x00,
		0x80, 0x32, 0x4d, 0x76, 0xc0, 0xa8, 0x01, 0x02,
		0xc0, 0xa8, 0x01, 0x01,

		/* ESP */
		0x00, 0x00, 0xa5, 0xf8, 0x00, 0x00, 0x00, 0x0a,

		/* IV */
		0xfa, 0xce, 0xdb, 0xad, 0xde, 0xca, 0xf8, 0x88,

		/* Data */
		0xde, 0xb2, 0x2c, 0xd9, 0xb0, 0x7c, 0x72, 0xc1,
		0x6e, 0x3a, 0x65, 0xbe, 0xeb, 0x8d, 0xf3, 0x04,
		0xa5, 0xa5, 0x89, 0x7d, 0x33, 0xae, 0x53, 0x0f,
		0x1b, 0xa7, 0x6d, 0x5d, 0x11, 0x4d, 0x2a, 0x5c,
		0x3d, 0xe8, 0x18, 0x27, 0xc1, 0x0e, 0x9a, 0x4f,
		0x51, 0x33, 0x0d, 0x0e, 0xec, 0x41, 0x66, 0x42,
		0xcf, 0xbb, 0x85, 0xa5, 0xb4, 0x7e, 0x48, 0xa4,
		0xec, 0x3b, 0x9b, 0xa9, 0x5d, 0x91, 0x8b, 0xd1,
		0x83, 0xb7, 0x0d, 0x3a, 0xa8, 0xbc, 0x6e, 0xe4,
		0xc3, 0x09, 0xe9, 0xd8, 0x5a, 0x41, 0xad, 0x4a,
	},
};

static const ipsec_test_packet pkt_mcgrew_gcm_test_3 = {
	.len = 62,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x30, 0x69, 0xa6, 0x40, 0x00,
		0x80, 0x06, 0x26, 0x90, 0xc0, 0xa8, 0x01, 0x02,
		0x93, 0x89, 0x15, 0x5e,

		/* TCP */
		0x0a, 0x9e, 0x00, 0x8b, 0x2d, 0xc5, 0x7e, 0xe0,
		0x00, 0x00, 0x00, 0x00, 0x70, 0x02, 0x40, 0x00,
		0x20, 0xbf, 0x00, 0x00, 0x02, 0x04, 0x05, 0xb4,
		0x01, 0x01, 0x04, 0x02,
	},
};

static const ipsec_test_packet pkt_mcgrew_gcm_test_3_esp = {
	.len = 118,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP - not a part of RFC, added for simplicity */
		0x45, 0x00, 0x00, 0x68, 0x69, 0x8f, 0x00, 0x00,
		0x80, 0x32, 0x4d, 0x82, 0xc0, 0xa8, 0x01, 0x02,
		0xc0, 0xa8, 0x01, 0x01,

		/* ESP */
		0x4a, 0x2c, 0xbf, 0xe3, 0x00, 0x00, 0x00, 0x02,

		/* IV */
		0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,

		/* Data */
		0xff, 0x42, 0x5c, 0x9b, 0x72, 0x45, 0x99, 0xdf,
		0x7a, 0x3b, 0xcd, 0x51, 0x01, 0x94, 0xe0, 0x0d,
		0x6a, 0x78, 0x10, 0x7f, 0x1b, 0x0b, 0x1c, 0xbf,
		0x06, 0xef, 0xae, 0x9d, 0x65, 0xa5, 0xd7, 0x63,
		0x74, 0x8a, 0x63, 0x79, 0x85, 0x77, 0x1d, 0x34,
		0x7f, 0x05, 0x45, 0x65, 0x9f, 0x14, 0xe9, 0x9d,
		0xef, 0x84, 0x2d, 0x8e, 0xb3, 0x35, 0xf4, 0xee,
		0xcf, 0xdb, 0xf8, 0x31, 0x82, 0x4b, 0x4c, 0x49,
		0x15, 0x95, 0x6c, 0x96,
	},
};

static const ipsec_test_packet pkt_mcgrew_gcm_test_4 = {
	.len = 74,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP */
		0x45, 0x00, 0x00, 0x3c, 0x99, 0xc5, 0x00, 0x00,
		0x80, 0x01, 0xcb, 0x7a, 0x40, 0x67, 0x93, 0x18,
		0x01, 0x01, 0x01, 0x01,

		/* ICMP */
		0x08, 0x00, 0x07, 0x5c, 0x02, 0x00, 0x44, 0x00,
		0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
		0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70,
		0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x61,
		0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69,
	},
};

static const ipsec_test_packet pkt_mcgrew_gcm_test_4_esp = {
	.len = 130,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP - not a part of RFC, added for simplicity */
		0x45, 0x00, 0x00, 0x74, 0x69, 0x8f, 0x00, 0x00,
		0x80, 0x32, 0x4d, 0x76, 0xc0, 0xa8, 0x01, 0x02,
		0xc0, 0xa8, 0x01, 0x01,

		/* ESP */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,

		/* IV */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

		/* Data */
		0x46, 0x88, 0xda, 0xf2, 0xf9, 0x73, 0xa3, 0x92,
		0x73, 0x29, 0x09, 0xc3, 0x31, 0xd5, 0x6d, 0x60,
		0xf6, 0x94, 0xab, 0xaa, 0x41, 0x4b, 0x5e, 0x7f,
		0xf5, 0xfd, 0xcd, 0xff, 0xf5, 0xe9, 0xa2, 0x84,
		0x45, 0x64, 0x76, 0x49, 0x27, 0x19, 0xff, 0xb6,
		0x4d, 0xe7, 0xd9, 0xdc, 0xa1, 0xe1, 0xd8, 0x94,
		0xbc, 0x3b, 0xd5, 0x78, 0x73, 0xed, 0x4d, 0x18,
		0x1d, 0x19, 0xd4, 0xd5, 0xc8, 0xc1, 0x8a, 0xf3,
		0xf8, 0x21, 0xd4, 0x96, 0xee, 0xb0, 0x96, 0xe9,
		0x8a, 0xd2, 0xb6, 0x9e, 0x47, 0x99, 0xc7, 0x1d,
	},
};

static const ipsec_test_packet pkt_mcgrew_gcm_test_12 = {
	.len = 14,
	.l2_offset = 0,
	.l3_offset = ODP_PACKET_OFFSET_INVALID,
	.l4_offset = ODP_PACKET_OFFSET_INVALID,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,
	},
};

static const ipsec_test_packet pkt_mcgrew_gcm_test_12_esp = {
	.len = 70,
	.l2_offset = 0,
	.l3_offset = 14,
	.l4_offset = 34,
	.data = {
		/* ETH - not a part of RFC, added for simplicity */
		0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
		0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

		/* IP - not a part of RFC, added for simplicity */
		0x45, 0x00, 0x00, 0x38, 0x69, 0x8f, 0x00, 0x00,
		0x80, 0x32, 0x4d, 0xb2, 0xc0, 0xa8, 0x01, 0x02,
		0xc0, 0xa8, 0x01, 0x01,

		/* ESP */
		0x33, 0x54, 0x67, 0xae, 0xff, 0xff, 0xff, 0xff,

		/* IV */
		0x43, 0x45, 0x7e, 0x91, 0x82, 0x44, 0x3b, 0xc6,

		/* Data */
		0x43, 0x7f, 0x86, 0x6b, 0xcb, 0x3f, 0x69, 0x9f,
		0xe9, 0xb0, 0x82, 0x2b, 0xac, 0x96, 0x1c, 0x45,
		0x04, 0xbe, 0xf2, 0x70,
	},
};

#endif
