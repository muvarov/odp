/* Copyright (c) 2017-2018, Linaro Limited
 * All rights reserved.
 *
 * SPDX-License-Identifier:     BSD-3-Clause
 */

#ifndef TEST_PACKET_PARSER_H_
#define TEST_PACKET_PARSER_H_

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Test packets without CRC */

/* ARP request */
static const uint8_t test_packet_arp[] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
	0x09, 0x00, 0x04, 0x00, 0x08, 0x06, 0x00, 0x01,
	0x08, 0x00, 0x06, 0x04, 0x00, 0x01, 0x00, 0x00,
	0x09, 0x00, 0x04, 0x00, 0xC0, 0xA8, 0x01, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xA8,
	0x01, 0x02, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05,
	0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D,
	0x0E, 0x0F, 0x10, 0x11
};

/* ICMPv4 echo reply */
static const uint8_t test_packet_ipv4_icmp[] = {
	0x00, 0x00, 0x09, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x09, 0x00, 0x04, 0x00, 0x08, 0x00, 0x45, 0x00,
	0x00, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x40, 0x01,
	0xF3, 0x7B, 0xC0, 0xA8, 0x01, 0x01, 0xC4, 0xA8,
	0x01, 0x02, 0x00, 0x00, 0xB7, 0xAB, 0x00, 0x01,
	0x00, 0x02, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05,
	0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D,
	0x0E, 0x0F, 0x10, 0x11
};

/* IPv4 TCP */
static const uint8_t test_packet_ipv4_tcp[] = {
	0x00, 0x00, 0x09, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x09, 0x00, 0x04, 0x00, 0x08, 0x00, 0x45, 0x00,
	0x00, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x40, 0x06,
	0xF3, 0x76, 0xC0, 0xA8, 0x01, 0x02, 0xC4, 0xA8,
	0x01, 0x01, 0x04, 0xD2, 0x10, 0xE1, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x50, 0x00,
	0x00, 0x00, 0x0C, 0xCC, 0x00, 0x00, 0x00, 0x01,
	0x02, 0x03, 0x04, 0x05
};

/* IPv4 UDP */
static const uint8_t test_packet_ipv4_udp[] = {
	0x00, 0x00, 0x09, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x09, 0x00, 0x04, 0x00, 0x08, 0x00, 0x45, 0x00,
	0x00, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x40, 0x11,
	0xF3, 0x6B, 0xC0, 0xA8, 0x01, 0x02, 0xC4, 0xA8,
	0x01, 0x01, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x1A,
	0x2F, 0x97, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05,
	0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D,
	0x0E, 0x0F, 0x10, 0x11
};

/* VLAN IPv4 UDP
 * - type 0x8100, tag 23
 */
static const uint8_t test_packet_vlan_ipv4_udp[] = {
	0x00, 0x00, 0x09, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x09, 0x00, 0x04, 0x00, 0x81, 0x00, 0x00, 0x17,
	0x08, 0x00, 0x45, 0x00, 0x00, 0x2A, 0x00, 0x00,
	0x00, 0x00, 0x40, 0x11, 0xF3, 0x6F, 0xC0, 0xA8,
	0x01, 0x02, 0xC4, 0xA8, 0x01, 0x01, 0x00, 0x3F,
	0x00, 0x3F, 0x00, 0x16, 0x4D, 0xBF, 0x00, 0x01,
	0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
	0x0A, 0x0B, 0x0C, 0x0D
};

/* VLAN Q-in-Q IPv4 UDP
 * - Outer: type 0x88a8, tag 1
 * - Inner: type 0x8100, tag 2
 */
static const uint8_t test_packet_vlan_qinq_ipv4_udp[] = {
	0x00, 0x00, 0x09, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x09, 0x00, 0x04, 0x00, 0x88, 0xA8, 0x00, 0x01,
	0x81, 0x00, 0x00, 0x02, 0x08, 0x00, 0x45, 0x00,
	0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x40, 0x11,
	0xF3, 0x73, 0xC0, 0xA8, 0x01, 0x02, 0xC4, 0xA8,
	0x01, 0x01, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x12,
	0x63, 0xDF, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05,
	0x06, 0x07, 0x08, 0x09
};

/* ICMPv6 echo request */
static const uint8_t test_packet_ipv6_icmp[] = {
	0x00, 0x00, 0x09, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x09, 0x00, 0x04, 0x00, 0x86, 0xDD, 0x60, 0x30,
	0x00, 0x00, 0x00, 0x08, 0x3A, 0xFF, 0xFE, 0x80,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x09, 0xFF, 0xFE, 0x00, 0x04, 0x00, 0x35, 0x55,
	0x55, 0x55, 0x66, 0x66, 0x66, 0x66, 0x77, 0x77,
	0x77, 0x77, 0x88, 0x88, 0x88, 0x88, 0x80, 0x00,
	0x1B, 0xC2, 0x00, 0x01, 0x00, 0x02
};

/* IPv6 TCP */
static const uint8_t test_packet_ipv6_tcp[] = {
	0x00, 0x00, 0x09, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x09, 0x00, 0x04, 0x00, 0x86, 0xDD, 0x60, 0x30,
	0x00, 0x00, 0x00, 0x14, 0x06, 0xFF, 0xFE, 0x80,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x09, 0xFF, 0xFE, 0x00, 0x04, 0x00, 0x35, 0x55,
	0x55, 0x55, 0x66, 0x66, 0x66, 0x66, 0x77, 0x77,
	0x77, 0x77, 0x88, 0x88, 0x88, 0x88, 0x04, 0xD2,
	0x10, 0xE1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x02, 0x50, 0x00, 0x00, 0x00, 0x36, 0x37,
	0x00, 0x00
};

/* IPv6 UDP */
static const uint8_t test_packet_ipv6_udp[] = {
	0x00, 0x00, 0x09, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x09, 0x00, 0x04, 0x00, 0x86, 0xDD, 0x60, 0x30,
	0x00, 0x00, 0x00, 0x08, 0x11, 0xFF, 0xFE, 0x80,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x09, 0xFF, 0xFE, 0x00, 0x04, 0x00, 0x35, 0x55,
	0x55, 0x55, 0x66, 0x66, 0x66, 0x66, 0x77, 0x77,
	0x77, 0x77, 0x88, 0x88, 0x88, 0x88, 0x00, 0x3F,
	0x00, 0x3F, 0x00, 0x08, 0x9B, 0x68
};

/* VLAN IPv6
 * - type 0x8100, tag 23
 */
static const uint8_t test_packet_vlan_ipv6_udp[] = {
	0x00, 0x00, 0x09, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x09, 0x00, 0x04, 0x00, 0x81, 0x00, 0x00, 0x17,
	0x86, 0xDD, 0x60, 0x30, 0x00, 0x00, 0x00, 0x08,
	0x11, 0xFF, 0xFE, 0x80, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x09, 0xFF, 0xFE, 0x00,
	0x04, 0x00, 0x35, 0x55, 0x55, 0x55, 0x66, 0x66,
	0x66, 0x66, 0x77, 0x77, 0x77, 0x77, 0x88, 0x88,
	0x88, 0x88, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x08,
	0x9B, 0x68
};

/* IPv4 SCTP
 * - chunk type: payload data
 */
static const uint8_t test_packet_ipv4_sctp[] = {
	0x00, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x00, 0x01,
	0x02, 0x03, 0x04, 0x05, 0x08, 0x00, 0x45, 0x00,
	0x00, 0x77, 0x00, 0x01, 0x00, 0x00, 0x40, 0x84,
	0xF8, 0xAE, 0xC0, 0xA8, 0x00, 0x01, 0xC0, 0xA8,
	0x00, 0x02, 0x04, 0xD2, 0x16, 0x2E, 0xDE, 0xAD,
	0xBE, 0xEF, 0x31, 0x44, 0xE3, 0xFE, 0x00, 0x00,
	0x00, 0x57, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x68,
	0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x6D, 0x79,
	0x20, 0x64, 0x75, 0x6D, 0x6D, 0x79, 0x20, 0x70,
	0x61, 0x79, 0x6C, 0x6F, 0x61, 0x64, 0x20, 0x73,
	0x74, 0x72, 0x69, 0x6E, 0x67, 0x2E, 0x20, 0x54,
	0x68, 0x65, 0x20, 0x6C, 0x65, 0x6E, 0x67, 0x74,
	0x68, 0x20, 0x6F, 0x66, 0x20, 0x74, 0x68, 0x69,
	0x73, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67,
	0x20, 0x69, 0x73, 0x20, 0x37, 0x31, 0x20, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x2E
};

/* IPv6 SCTP
 * - chunk type: payload data
 */
static const uint8_t test_packet_ipv6_sctp[] = {
	0x00, 0x00, 0x09, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x09, 0x00, 0x04, 0x00, 0x86, 0xDD, 0x60, 0x30,
	0x00, 0x00, 0x00, 0x63, 0x84, 0xFF, 0xFE, 0x80,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x09, 0xFF, 0xFE, 0x00, 0x04, 0x00, 0x35, 0x55,
	0x55, 0x55, 0x66, 0x66, 0x66, 0x66, 0x77, 0x77,
	0x77, 0x77, 0x88, 0x88, 0x88, 0x88, 0x04, 0xD2,
	0x16, 0x2E, 0xDE, 0xAD, 0xBE, 0xEF, 0x31, 0x44,
	0xE3, 0xFE, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00,
	0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69,
	0x73, 0x20, 0x6D, 0x79, 0x20, 0x64, 0x75, 0x6D,
	0x6D, 0x79, 0x20, 0x70, 0x61, 0x79, 0x6C, 0x6F,
	0x61, 0x64, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6E,
	0x67, 0x2E, 0x20, 0x54, 0x68, 0x65, 0x20, 0x6C,
	0x65, 0x6E, 0x67, 0x74, 0x68, 0x20, 0x6F, 0x66,
	0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 0x74,
	0x72, 0x69, 0x6E, 0x67, 0x20, 0x69, 0x73, 0x20,
	0x37, 0x31, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x2E
};

static const uint8_t test_packet_ipv4_ipsec_ah[] = {
	/* ETH */
	0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
	0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

	/* IPv4 */
	0x45, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x00,
	0x40, 0x33, 0xab, 0xd9, 0xc0, 0xa8, 0x6f, 0x02,
	0xc0, 0xa8, 0xde, 0x02,

	/* AH */
	0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b,
	0x00, 0x00, 0x00, 0x01,
	0x6c, 0x2e, 0xf7, 0x1f, 0x7c, 0x70, 0x39, 0xa3,
	0x4a, 0x77, 0x01, 0x47, 0x9e, 0x45, 0x73, 0x51,

	/* ICMP */
	0x08, 0x00, 0xfb, 0x37, 0x12, 0x34, 0x00, 0x00,
	0xba, 0xbe, 0x01, 0x23, 0x45, 0x67, 0xca, 0xfe,
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
	0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
	0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
	0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
	0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
	0x58, 0x59, 0x5a, 0x5b
};

static const uint8_t test_packet_ipv4_ipsec_esp[] = {
	/* ETH */
	0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
	0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x08, 0x00,

	/* IPv4 */
	0x45, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x00,
	0x40, 0x32, 0x19, 0x18, 0x0a, 0x00, 0x6f, 0x02,
	0x0a, 0x00, 0xde, 0x02,

	/* ESP */
	0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x01,

	/* IPv4 */
	0x45, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
	0x40, 0x01, 0xac, 0x27, 0xc0, 0xa8, 0x6f, 0x02,
	0xc0, 0xa8, 0xde, 0x02,

	/* ICMP */
	0x08, 0x00, 0xfb, 0x37, 0x12, 0x34, 0x00, 0x00,
	0xba, 0xbe, 0x01, 0x23, 0x45, 0x67, 0xca, 0xfe,
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
	0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
	0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
	0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
	0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
	0x58, 0x59, 0x5a, 0x5b,

	/* ESP TRL */
	0x01, 0x02, 0x02, 0x04,

	/* ICV */
	0x73, 0x8d, 0xf6, 0x9a, 0x26, 0x06, 0x4d, 0xa1,
	0x88, 0x37, 0x65, 0xab, 0x0d, 0xe9, 0x95, 0x3b
};

static const uint8_t test_packet_ipv6_ipsec_ah[] = {
	/* ETH */
	0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
	0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x86, 0xdd,

	/* IPv6 */
	0x60, 0x00, 0x00, 0x00, 0x00, 0xbc, 0x33, 0x40,
	0x20, 0x01, 0x0d, 0xb8, 0x00, 0x00, 0x00, 0x00,
	0x02, 0x11, 0x43, 0xff, 0xfe, 0x4a, 0xd7, 0x0a,
	0x20, 0x01, 0x0d, 0xb8, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16,

	/* AH */
	0x29, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b,
	0x00, 0x00, 0x00, 0x01,
	0x62, 0x96, 0x2b, 0x40, 0x3e, 0x53, 0x76, 0x4a,
	0x4d, 0x7f, 0xf6, 0x22, 0x35, 0x3c, 0x74, 0xe2,
	0x00, 0x00, 0x00, 0x00,

	/* IPv6 */
	0x60, 0x00, 0x00, 0x00, 0x00, 0x74, 0x00, 0x40,
	0x20, 0x01, 0x0d, 0xb8, 0x00, 0x00, 0x00, 0x00,
	0x02, 0x11, 0x43, 0xff, 0xfe, 0x4a, 0xd7, 0x0a,
	0x20, 0x01, 0x0d, 0xb8, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16,

	/* Hop-by-Hop */
	0x3a, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00,

	/* ICMP */
	0x08, 0x00, 0xfb, 0x37, 0x12, 0x34, 0x00, 0x00,
	0xba, 0xbe, 0x01, 0x23, 0x45, 0x67, 0xca, 0xfe,
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
	0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
	0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
	0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
	0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
	0x58, 0x59, 0x5a, 0x5b
};

static const uint8_t test_packet_ipv6_ipsec_esp[] = {
	/* ETH */
	0xf1, 0xf1, 0xf1, 0xf1, 0xf1, 0xf1,
	0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0xf2, 0x86, 0xdd,

	/* IPv6 */
	0x60, 0x00, 0x00, 0x00, 0x00, 0x9c, 0x32, 0x40,
	0x20, 0x01, 0x0d, 0xb8, 0x00, 0x00, 0x00, 0x00,
	0x02, 0x11, 0x43, 0xff, 0xfe, 0x4a, 0xd7, 0x0a,
	0x20, 0x01, 0x0d, 0xb8, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16,

	/* ESP */
	0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x01,

	/* IPv4 */
	0x45, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
	0x40, 0x01, 0xac, 0x27, 0xc0, 0xa8, 0x6f, 0x02,
	0xc0, 0xa8, 0xde, 0x02,

	/* ICMP */
	0x08, 0x00, 0xfb, 0x37, 0x12, 0x34, 0x00, 0x00,
	0xba, 0xbe, 0x01, 0x23, 0x45, 0x67, 0xca, 0xfe,
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
	0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
	0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
	0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
	0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
	0x58, 0x59, 0x5a, 0x5b,

	/* ESP TRL */
	0x01, 0x02, 0x02, 0x04,

	/* ICV */
	0x73, 0x8d, 0xf6, 0x9a, 0x26, 0x06, 0x4d, 0xa1,
	0x88, 0x37, 0x65, 0xab, 0x0d, 0xe9, 0x95, 0x3b
};

static const uint8_t test_packet_mcast_eth_ipv4_udp[] = {
	0x03, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x02, 0x00,
	0x00, 0x03, 0x04, 0x05, 0x08, 0x00, 0x45, 0x00,
	0x00, 0x63, 0x00, 0x01, 0x00, 0x00, 0x40, 0x11,
	0xC8, 0xDB, 0xC0, 0xA8, 0x00, 0x01, 0xEF, 0x01,
	0x02, 0x03, 0x04, 0xD2, 0x16, 0x2E, 0x00, 0x4F,
	0x25, 0x61, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69,
	0x73, 0x20, 0x6D, 0x79, 0x20, 0x64, 0x75, 0x6D,
	0x6D, 0x79, 0x20, 0x70, 0x61, 0x79, 0x6C, 0x6F,
	0x61, 0x64, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6E,
	0x67, 0x2E, 0x20, 0x54, 0x68, 0x65, 0x20, 0x6C,
	0x65, 0x6E, 0x67, 0x74, 0x68, 0x20, 0x6F, 0x66,
	0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 0x74,
	0x72, 0x69, 0x6E, 0x67, 0x20, 0x69, 0x73, 0x20,
	0x37, 0x31, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x2E
};

static const uint8_t test_packet_bcast_eth_ipv4_udp[] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x02, 0x00,
	0x00, 0x03, 0x04, 0x05, 0x08, 0x00, 0x45, 0x00,
	0x00, 0x63, 0x00, 0x01, 0x00, 0x00, 0x40, 0x11,
	0xB9, 0xE0, 0xC0, 0xA8, 0x00, 0x01, 0xFF, 0xFF,
	0xFF, 0xFF, 0x04, 0xD2, 0x16, 0x2E, 0x00, 0x4F,
	0x16, 0x66, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69,
	0x73, 0x20, 0x6D, 0x79, 0x20, 0x64, 0x75, 0x6D,
	0x6D, 0x79, 0x20, 0x70, 0x61, 0x79, 0x6C, 0x6F,
	0x61, 0x64, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6E,
	0x67, 0x2E, 0x20, 0x54, 0x68, 0x65, 0x20, 0x6C,
	0x65, 0x6E, 0x67, 0x74, 0x68, 0x20, 0x6F, 0x66,
	0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 0x74,
	0x72, 0x69, 0x6E, 0x67, 0x20, 0x69, 0x73, 0x20,
	0x37, 0x31, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x2E
};

static const uint8_t test_packet_mcast_eth_ipv6_udp[] = {
	0x33, 0x33, 0x01, 0x02, 0x03, 0x04, 0x02, 0x00,
	0x00, 0x03, 0x04, 0x05, 0x86, 0xDD, 0x60, 0x00,
	0x00, 0x00, 0x00, 0x4F, 0x11, 0x40, 0xFE, 0x80,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xFF, 0xFE, 0x03, 0x04, 0x05, 0xFF, 0x02,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x04, 0xD2,
	0x16, 0x2E, 0x00, 0x4F, 0xD6, 0x79, 0x54, 0x68,
	0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x6D, 0x79,
	0x20, 0x64, 0x75, 0x6D, 0x6D, 0x79, 0x20, 0x70,
	0x61, 0x79, 0x6C, 0x6F, 0x61, 0x64, 0x20, 0x73,
	0x74, 0x72, 0x69, 0x6E, 0x67, 0x2E, 0x20, 0x54,
	0x68, 0x65, 0x20, 0x6C, 0x65, 0x6E, 0x67, 0x74,
	0x68, 0x20, 0x6F, 0x66, 0x20, 0x74, 0x68, 0x69,
	0x73, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67,
	0x20, 0x69, 0x73, 0x20, 0x37, 0x31, 0x20, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x2E
};

static const uint8_t test_packet_ipv4_udp_first_frag[] = {
	0x02, 0x00, 0x00, 0x04, 0x05, 0x06, 0x02, 0x00,
	0x00, 0x01, 0x02, 0x03, 0x08, 0x00, 0x45, 0x00,
	0x00, 0x63, 0x00, 0x01, 0x20, 0x00, 0x40, 0x11,
	0xD9, 0x35, 0xC0, 0xA8, 0x00, 0x01, 0xC0, 0xA8,
	0x00, 0x02, 0x04, 0xD2, 0x16, 0x2E, 0x01, 0x17,
	0x54, 0xF3, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69,
	0x73, 0x20, 0x6D, 0x79, 0x20, 0x64, 0x75, 0x6D,
	0x6D, 0x79, 0x20, 0x70, 0x61, 0x79, 0x6C, 0x6F,
	0x61, 0x64, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6E,
	0x67, 0x2E, 0x20, 0x54, 0x68, 0x65, 0x20, 0x6C,
	0x65, 0x6E, 0x67, 0x74, 0x68, 0x20, 0x6F, 0x66,
	0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 0x74,
	0x72, 0x69, 0x6E, 0x67, 0x20, 0x69, 0x73, 0x20,
	0x37, 0x31, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x2E
};

static const uint8_t test_packet_ipv4_udp_last_frag[] = {
	0x02, 0x00, 0x00, 0x04, 0x05, 0x06, 0x02, 0x00,
	0x00, 0x01, 0x02, 0x03, 0x08, 0x00, 0x45, 0x00,
	0x00, 0x5B, 0x00, 0x01, 0x00, 0x0A, 0x40, 0x11,
	0xF9, 0x33, 0xC0, 0xA8, 0x00, 0x01, 0xC0, 0xA8,
	0x00, 0x02, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69,
	0x73, 0x20, 0x6D, 0x79, 0x20, 0x64, 0x75, 0x6D,
	0x6D, 0x79, 0x20, 0x70, 0x61, 0x79, 0x6C, 0x6F,
	0x61, 0x64, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6E,
	0x67, 0x2E, 0x20, 0x54, 0x68, 0x65, 0x20, 0x6C,
	0x65, 0x6E, 0x67, 0x74, 0x68, 0x20, 0x6F, 0x66,
	0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 0x74,
	0x72, 0x69, 0x6E, 0x67, 0x20, 0x69, 0x73, 0x20,
	0x37, 0x31, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x2E
};

/* IPv4 / Record Route + NOP options / ICMP */
static const uint8_t test_packet_ipv4_rr_nop_icmp[] = {
	0x02, 0x00, 0x00, 0x04, 0x05, 0x06, 0x02, 0x00,
	0x00, 0x01, 0x02, 0x03, 0x08, 0x00, 0x49, 0x00,
	0x00, 0x2C, 0x00, 0x01, 0x00, 0x00, 0x40, 0x01,
	0x8E, 0xE2, 0xC0, 0xA8, 0x00, 0x01, 0xC0, 0xA8,
	0x00, 0x02, 0x07, 0x0F, 0x0C, 0xC0, 0xA8, 0x04,
	0x01, 0xC0, 0xA8, 0x05, 0x01, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x08, 0x00, 0xF7, 0xFF, 0x00, 0x00,
	0x00, 0x00
};

#ifdef __cplusplus
}
#endif

#endif
